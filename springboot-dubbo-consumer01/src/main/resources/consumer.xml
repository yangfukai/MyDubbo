<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"    
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
	http://www.springframework.org/schema/beans/spring-beans.xsd    
	http://code.alibabatech.com/schema/dubbo    
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd "> 
	<!-- 消费者的公共配置 --> 
	<dubbo:consumer check="false" />        
	<!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样  --> 
	<dubbo:application name="dubbo_consumer" />         
	<!-- 使用multicast广播注册中心暴露发现服务地址 -->    
	<dubbo:registry  protocol="zookeeper" address="zookeeper://192.168.1.59:2181" check="false"/>
	<!-- 生成远程服务代理，可以和本地bean一样使用demoService -->   
	<!-- 集群容错
			  1、Failover Cluster ：失败自动切换   缺省值
			  <dubbo:service retries="2" /> 或：
			<dubbo:reference retries="2" />
			2、Failfast Cluster：快速失败
			通常用于非幂等性的写操作，比如新增记录。
			<dubbo:service cluster="failfast" /> 或：
			<dubbo:reference cluster="failfast" />
			3、Failsafe Cluster：失败安全
			失败安全，出现异常时，直接忽略。
			通常用于写入审计日志等操作。
			<dubbo:service cluster="failsafe" /> 或：
			<dubbo:referencecluster="failsafe" />
			4、FailbackCluster：失败自动恢复

			失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。
			<dubbo:service cluster="failback" /> 或：
			<dubbo:reference cluster="failback" />
			5、ForkingCluster：并行调用

			并行调用多个服务器，只要一个成功即返回。
			通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过forks="2"来设置最大并行数。
			<dubbo:service cluster=“forking" />
			或：
			<dubbo:reference cluster=“forking" />
		   --> 
	<!-- 
					   负载均衡
					   Random LoadBalance
					随机，按权重设置随机概率。
					在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较
					均匀，有利于动态调整提供者权重。
					RoundRobin LoadBalance
					轮循，按公约后的权重设置轮循比率。
					存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台
					时就卡在那，久而久之，所有请求都卡在调到第二台上。
					LeastActive LoadBalance
					最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。
					使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。
					ConsistentHash LoadBalance
					一致性 Hash，相同参数的请求总是发到同一提供者。
					当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，
					不会引起剧烈变动。
					算法参见：http://en.wikipedia.org/wiki/Consistent_hashing
					缺省只对第一个参数 Hash，如果要修改，请配置 <dubbo:parameter
					key="hash.arguments" value="0,1" />
					缺省用 160 份虚拟节点，如果要修改，请配置 <dubbo:parameter key="hash.nodes"
					value="320" />
		   -->
	<!--
			直连提供者
			在 <dubbo:reference> 中配置 url 指向提供者
			url="dubbo://localhost:29014"
		 -->
	<!--<dubbo:reference id="providerService" interface="com.dongnao.jack.service.ProviderService"  check="false"  retries="2" loadbalance="roundrobin" />-->  
	<dubbo:protocol name="dubbo" port="29015" />
	<!-- 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类 -->
	<dubbo:annotation package="com.yangkai.controller" />
</beans>